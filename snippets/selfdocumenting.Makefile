# ----------
# SELF-DOCUMENTING HELP
# This makefile uses a combination of 'awk', 'printf' and regex to print out a nicely formatted help
# The 'help' target is the default target meaning that it is the target that is run when you
# run `make` without any arguments (in the root of pac). It is also what is run with `make help`.
#
# Help will automatically pick up new targets/recipes that you add to the file. To document
# a target, add a comment beginning with '##' followed by a space that describes what the target does beside the
# target (and after pre-requisites if applicable).
#
# Headings in the help output are generated by adding a comment on a new line with two '#' characters
# followed by '@', a whitespace, and the name of the heading.
#
# Example:
#
# ##@ Heading Name
#
# <target>: optional-prerequisite1 ## Description of target
# ----------

# VARIABLES
shell=/bin/bash
log_level=20

USER_NAME ?= $(shell whoami)
GROUP_ID ?= $(shell id -g)
USER_ID ?= $(shell id -u)

# Running make without a target invokes `help`
DEFAULT_GOAL: help
# Makefile Configuration
MAKEFLAGS += --warn-undefined-variables

##@ INSTALLATION & SETUP
install: echo "no installation steps found"

##@ Other

.PHONY: help
help: ## Display this help
	@awk 'BEGIN {FS = ":.*##"; printf "\nUsage:\n  make \033[36m<target>\033[0m\n"} /^[0-9a-zA-Z_-]+:.*?##/ { printf "\033[36m%-30s\033[0m %s\n", $$1, $$2 } /^##@/ { printf "\n\033[1m%s\033[0m\n", substr($$0, 5) } ' $(MAKEFILE_LIST)
	@printf "\n"
##@ INSTALLATION & SETUP
